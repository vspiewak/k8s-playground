- name: create the VPC
  amazon.aws.ec2_vpc_net:
    name: "vpc-{{ aws_label }}"
    region: "{{ aws_region }}"
    cidr_block: "{{ aws_vpc.cidr_block }}"
    dns_support: yes
    dns_hostnames: yes
    tenancy: default
    tags:
      Label: "{{ aws_label }}"
      Provisioner: ansible
  register: vpc_result

- name: create the VPC Subnet
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc_result.vpc.id }}"
    region: "{{ aws_region }}"
    az: "{{ aws_subnet.az }}"
    state: present
    cidr: "{{ aws_subnet.cidr_block }}"
    map_public: yes
    resource_tags:
      Label: "{{ aws_label }}"
      Provisioner: ansible
  register: subnet_result

- name: create the VPC Internet Gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc_result.vpc.id }}"
    region: "{{ aws_region }}"
    state: present
    tags:
      Label: "{{ aws_label }}"
      Provisioner: ansible
  register: igw_result

- name: gather information about the default VPC Route Table
  amazon.aws.ec2_vpc_route_table_info:
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ vpc_result.vpc.id }}"
  register: rt_results

- name: setup default route tables
  amazon.aws.ec2_vpc_route_table:
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_result.vpc.id }}"
    lookup: id
    purge_subnets: false
    route_table_id: "{{ rt_results.route_tables[0].id }}"
    subnets: "{{ subnet_result.subnet.id }}"
    tags:
      Label: "{{ aws_label }}"
      Provisioner: ansible    
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw_result.gateway_id }}"

- name: create an EC2 key pair
  amazon.aws.ec2_key:
    region: "{{ aws_region }}"
    name: "{{ aws_keypair }}"
  #no_log: true
  register: key_result

- name: write EC2 pem file
  ansible.builtin.copy:
    content: "{{ key_result.key.private_key }}"
    dest: "~/.ssh/{{ aws_keypair }}.pem"
    mode: '0400'
  when: key_result.changed


- name: create EC2 Security Groups
  amazon.aws.ec2_security_group:
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_result.vpc.id }}"
    name: "{{item.name}}_sg"
    description: "vpc-{{ aws_label }}-{{item.name}} security group rules"
    rules: "{{ item.security_group.rules }}"
  loop: "{{ aws_instances }}"

- name: create EC2 instances
  amazon.aws.ec2_instance:
    name: "{{item.name}}"
    instance_type: "{{item.type}}"
    image_id: "{{item.ami}}"
    exact_count: "{{item.count}}"
    key_name: "{{ aws_keypair }}"
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ subnet_result.subnet.id }}"
    security_group: "{{item.name}}_sg"
    network:
      assign_public_ip: true
      delete_on_termination: true
    tags:
      Label: "{{ aws_label }}"
      Kind: "{{ item.name }}"
      Provisioner: ansible
  loop: "{{ aws_instances }}"
