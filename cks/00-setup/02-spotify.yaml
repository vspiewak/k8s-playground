apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: spotify
spec: {}
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: service1
  name: service1
  namespace: spotify
spec:
  replicas: 2
  selector:
    matchLabels:
      app: service1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: service1
    spec:
      containers:
      - image: nginx:alpine
        name: nginx
        ports:
        - containerPort: 80
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - "echo 'spotify service1' > /usr/share/nginx/html/index.html"   
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: service1
  name: service1
  namespace: spotify
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: service1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: service2
  name: service2
  namespace: spotify
spec:
  replicas: 2
  selector:
    matchLabels:
      app: service2
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: service2
    spec:
      containers:
      - image: nginx:alpine
        name: nginx
        ports:
        - containerPort: 80
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - "echo 'spotify service2' > /usr/share/nginx/html/index.html"   
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: service2
  name: service2
  namespace: spotify
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: service2
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: shell
  name: shell
  namespace: spotify
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: nginx:alpine
    name: shell
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
---
